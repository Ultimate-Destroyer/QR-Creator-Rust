name: Rust Release

on:
  push:
    tags:
      - '*'

permissions:
  contents: write

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-gnu

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "linux-build"

      - name: Build Binary
        run: cargo build --verbose --release --target x86_64-unknown-linux-gnu

      - name: Prepare artifacts
        run: |
          mkdir -p artifacts/linux
          # Copy only the main binary, not the entire directory
          find target/x86_64-unknown-linux-gnu/release -maxdepth 1 -type f -executable -not -name "*.d" -not -name "*.rlib" -exec cp {} artifacts/linux/ \;
          cd artifacts/linux
          for file in *; do
            if [ -f "$file" ]; then
              mv "$file" "linux_$file"
            fi
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-artifacts
          path: artifacts/linux/*
          retention-days: 1

  build-windows:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-gnu

      - name: Install MinGW
        run: |
          sudo apt-get update
          sudo apt-get install -y mingw-w64
          sudo update-alternatives --set x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix
          sudo update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "windows-build"

      - name: Build Binary
        run: cargo build --verbose --release --target x86_64-pc-windows-gnu

      - name: Prepare artifacts
        run: |
          mkdir -p artifacts/windows
          # Copy only .exe files, not the entire directory
          find target/x86_64-pc-windows-gnu/release -maxdepth 1 -name "*.exe" -not -name "*.d" -exec cp {} artifacts/windows/ \;
          cd artifacts/windows
          for file in *.exe; do
            if [ -f "$file" ]; then
              mv "$file" "windows_$file"
            fi
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifacts
          path: artifacts/windows/*
          retention-days: 1

  release:
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          files: |
            linux-artifacts/linux_*
            windows-artifacts/windows_*
        env:
          GITHUB_TOKEN: ${{ secrets.YOUR_PAT_SECRET }}
