name: Rust Release

on:
  push:
    tags:
      - '*'  # Triggers on version tags like v1.0, v2.1, etc.

permissions:
  contents: write
  
jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install Linux target
        run: rustup target add x86_64-unknown-linux-gnu

      - name: Build the project for Linux
        run: cargo build --verbose --release --target x86_64-unknown-linux-gnu

      - name: Archive Linux binary
        if: success()
        run: |
          mkdir -p artifacts/linux
          cp target/x86_64-unknown-linux-gnu/release/* artifacts/linux/
          rm -f artifacts/linux/*.d
          for file in artifacts/linux/*; do
            mv "$file" "artifacts/linux/linux_$(basename "$file")"
          done

      - name: Upload Linux artifacts
        if: success()
        uses: actions/upload-artifact@v4  
        with:
          name: linux-artifacts
          path: artifacts/linux/*

  build-windows:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install Windows target
        run: rustup target add x86_64-pc-windows-gnu

      - name: Install Necessary Dependencies
        run: sudo apt-get install -y mingw-w64

      - name: Set Versions
        run: |
          sudo update-alternatives --config x86_64-w64-mingw32-gcc
          sudo update-alternatives --config x86_64-w64-mingw32-g++

      - name: Build the project for Windows
        run: cargo build --verbose --release --target x86_64-pc-windows-gnu

      - name: Archive Windows binary
        if: success()
        run: |
          mkdir -p artifacts/windows
          cp target/x86_64-pc-windows-gnu/release/* artifacts/windows/
          rm -f artifacts/windows/*.d
          for file in artifacts/windows/*; do
            mv "$file" "artifacts/windows/windows_$(basename "$file")"
          done

      - name: Upload Windows artifacts
        if: success()
        uses: actions/upload-artifact@v4  
        with:
          name: windows-artifacts
          path: artifacts/windows/*

  release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows]  
    steps:
      - name: Download Linux artifacts
        uses: actions/download-artifact@v4  
        with:
          name: linux-artifacts

      - name: Download Windows artifacts
        uses: actions/download-artifact@v4  
        with:
          name: windows-artifacts

      - name: Upload Release to GitHub Releases
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}  
          files: |
            linux/linux_*
            windows/windows_*
        env:
          GITHUB_TOKEN: ${{ secrets.YOUR_PAT_SECRET }}
